diff --git a/lib/accesslib.php b/lib/accesslib.php
index c1e0b56..fa465ba 100644
--- a/lib/accesslib.php
+++ b/lib/accesslib.php
@@ -763,6 +763,22 @@ function get_user_access_sitewide($userid) {
         }
     }
 
+    // ELIS-4089 -- Get all of the ELIS context levels
+    $elis_ctx_levels = array();
+
+    if (file_exists($CFG->dirroot.'/elis/program/accesslib.php')) {
+        require_once($CFG->dirroot.'/elis/program/accesslib.php');
+        $elis_ctx_levels = array_keys(context_elis_helper::get_all_levels());
+    }
+
+    // If we have custom ELIS context levels, we need to use them in the query
+    $ectxlvl = '';
+    $params2 = array();
+
+    if (!empty($elis_ctx_levels)) {
+        list($ectxlvl, $params2) = $DB->get_in_or_equal($elis_ctx_levels, SQL_PARAMS_NAMED, 'ectxlvl');
+    }
+
     // preload every assigned role at and above course context
     $sql = "SELECT ctx.path, ra.roleid, ra.contextid
               FROM {role_assignments} ra
@@ -773,8 +789,16 @@ function get_user_access_sitewide($userid) {
          LEFT JOIN {context} bpctx
                    ON (bpctx.id = bi.parentcontextid)
              WHERE ra.userid = :userid
-                   AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.")";
+                   AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.
+                   (!empty($ectxlvl) ? ' OR ctx.contextlevel '.$ectxlvl : '').")";
+
     $params = array('userid'=>$userid);
+
+    // Add custom ELIS context level parameters to the query
+    if (!empty($params2)) {
+        $params = array_merge($params, $params2);
+    }
+
     $rs = $DB->get_recordset_sql($sql, $params);
     foreach ($rs as $ra) {
         // RAs leafs are arrays to support multi-role assignments...
@@ -799,6 +823,13 @@ function get_user_access_sitewide($userid) {
         list($sqlcids, $cids) = $DB->get_in_or_equal($ras, SQL_PARAMS_NAMED, 'c'.$cp.'_');
         $params = array_merge($params, $cids);
         $params['r'.$cp] = $roleid;
+
+        // Load custom ELIS context levels, if applicable
+        if (!empty($elis_ctx_levels)) {
+            reset($elis_ctx_levels);
+            list($ectxlvl, $params2) = $DB->get_in_or_equal($elis_ctx_levels, SQL_PARAMS_NAMED, 'ectxlvl');
+            $params = array_merge($params, $params2);
+        }
         $sqls[] = "(SELECT ctx.path, rc.roleid, rc.capability, rc.permission
                      FROM {role_capabilities} rc
                      JOIN {context} ctx
@@ -813,8 +844,9 @@ function get_user_access_sitewide($userid) {
                 LEFT JOIN {context} bpctx
                           ON (bpctx.id = bi.parentcontextid)
                     WHERE rc.roleid = :r{$cp}
-                          AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.")
-                   )";
+                          AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.
+                          (!empty($ectxlvl) ? ' OR ctx.contextlevel '.$ectxlvl : '').")".
+                ")";
     }
 
     // fixed capability order is necessary for rdef dedupe
@@ -5148,6 +5180,19 @@ abstract class context extends stdClass implements IteratorAggregate {
         }
 
         if ($record = $DB->get_record('context', array('id'=>$id), '*', $strictness)) {
+            // ELIS-4089 -- Check if the custom ELIS PM contexts are available and if this context is one of them
+            global $CFG;
+
+            if (file_exists($CFG->dirroot.'/elis/program/accesslib.php')) {
+                require_once($CFG->dirroot.'/elis/program/accesslib.php');
+
+                if ($ctx = $DB->get_record('context', array('id' => $id), '*', $strictness)) {
+                    if (array_key_exists($ctx->contextlevel, context_elis_helper::get_all_levels())) {
+                        return context_elis::create_instance_from_record($record);
+                    }
+                }
+            }
+
             return context::create_instance_from_record($record);
         }
 
