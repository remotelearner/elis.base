diff --git a/lib/accesslib.php b/lib/accesslib.php
index e03c220..9319c55 100644
--- a/lib/accesslib.php
+++ b/lib/accesslib.php
@@ -776,6 +776,22 @@ function get_user_access_sitewide($userid) {
         }
     }
 
+    // ELIS-4089 -- Get all of the ELIS context levels
+    $elis_ctx_levels = array();
+
+    if (file_exists($CFG->dirroot.'/elis/program/accesslib.php')) {
+        require_once($CFG->dirroot.'/elis/program/accesslib.php');
+        $elis_ctx_levels = array_keys(context_elis_helper::get_all_levels());
+    }
+
+    // If we have custom ELIS context levels, we need to use them in the query
+    $ectxlvl = '';
+    $params2 = array();
+
+    if (!empty($elis_ctx_levels)) {
+        list($ectxlvl, $params2) = $DB->get_in_or_equal($elis_ctx_levels, SQL_PARAMS_NAMED, 'ectxlvl');
+    }
+
     // preload every assigned role at and above course context
     $sql = "SELECT ctx.path, ra.roleid, ra.contextid
               FROM {role_assignments} ra
@@ -786,8 +802,14 @@ function get_user_access_sitewide($userid) {
          LEFT JOIN {context} bpctx
                    ON (bpctx.id = bi.parentcontextid)
              WHERE ra.userid = :userid
-                   AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.")";
+                   AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.
+                   (!empty($ectxlvl) ? ' OR ctx.contextlevel '.$ectxlvl : '').")";
     $params = array('userid'=>$userid);
+    // Add custom ELIS context level parameters to the query
+    if (!empty($params2)) {
+        $params = array_merge($params, $params2);
+    }
+
     $rs = $DB->get_recordset_sql($sql, $params);
     foreach ($rs as $ra) {
         // RAs leafs are arrays to support multi-role assignments...
@@ -812,6 +834,13 @@ function get_user_access_sitewide($userid) {
         list($sqlcids, $cids) = $DB->get_in_or_equal($ras, SQL_PARAMS_NAMED, 'c'.$cp.'_');
         $params = array_merge($params, $cids);
         $params['r'.$cp] = $roleid;
+
+        // Load custom ELIS context levels, if applicable
+        if (!empty($elis_ctx_levels)) {
+            reset($elis_ctx_levels);
+            list($ectxlvl, $params2) = $DB->get_in_or_equal($elis_ctx_levels, SQL_PARAMS_NAMED, 'ectxlvl');
+            $params = array_merge($params, $params2);
+        }
         $sqls[] = "(SELECT ctx.path, rc.roleid, rc.capability, rc.permission
                      FROM {role_capabilities} rc
                      JOIN {context} ctx
@@ -826,7 +855,8 @@ function get_user_access_sitewide($userid) {
                 LEFT JOIN {context} bpctx
                           ON (bpctx.id = bi.parentcontextid)
                     WHERE rc.roleid = :r{$cp}
-                          AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.")
+                          AND (ctx.contextlevel <= ".CONTEXT_COURSE." OR bpctx.contextlevel < ".CONTEXT_COURSE.
+                          (!empty($ectxlvl) ? ' OR ctx.contextlevel '.$ectxlvl : '').")
                    )";
     }
 
@@ -5099,7 +5129,20 @@ abstract class context extends stdClass implements IteratorAggregate {
      * @return context instance
      */
     protected static function create_instance_from_record(stdClass $record) {
+        // RL EDIT: BJB130726 - support ELIS contexts
+        global $CFG;
+        try {
         $classname = context_helper::get_class_for_level($record->contextlevel);
+        } catch (Exception $e) {
+            if (file_exists($CFG->dirroot.'/elis/program/accesslib.php')) {
+                require_once($CFG->dirroot.'/elis/program/accesslib.php');
+                $classname = context_elis_helper::get_class_for_level($record->contextlevel);
+            }
+            if (empty($classname)) {
+                throw $e;
+            }
+        }
+        // End RL EDIT
 
         if ($context = context::cache_get_by_id($record->id)) {
             return $context;
@@ -7233,7 +7276,20 @@ function get_context_instance($contextlevel, $instance = 0, $strictness = IGNORE
     $instances = (array)$instance;
     $contexts = array();
 
+    // RL EDIT: BJB130726 - support ELIS contexts
+    global $CFG;
+    try {
     $classname = context_helper::get_class_for_level($contextlevel);
+    } catch (Exception $e) {
+        if (file_exists($CFG->dirroot.'/elis/program/accesslib.php')) {
+            require_once($CFG->dirroot.'/elis/program/accesslib.php');
+            $classname = context_elis_helper::get_class_for_level($contextlevel);
+        }
+        if (empty($classname)) {
+            throw $e;
+        }
+    }
+    // End RL EDIT
 
     // we do not load multiple contexts any more, PAGE should be responsible for any preloading
     foreach ($instances as $inst) {
