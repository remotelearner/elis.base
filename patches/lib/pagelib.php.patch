diff --git a/lib/pagelib.php b/lib/pagelib.php
index 8ebb63b..83a0edd 100644
--- a/lib/pagelib.php
+++ b/lib/pagelib.php
@@ -1480,10 +1480,10 @@ class moodle_page {
      * @return string the name of the theme that should be used on this page.
      */
     protected function resolve_theme() {
-        global $CFG, $USER, $SESSION;
+        global $DB, $CFG, $USER, $SESSION; // RL EDIT
 
         if (empty($CFG->themeorder)) {
-            $themeorder = array('course', 'category', 'session', 'user', 'site');
+            $themeorder = array('course', 'category', 'session', 'user', 'userset', 'site');
         } else {
             $themeorder = $CFG->themeorder;
             // Just in case, make sure we always use the site theme if nothing else matched.
@@ -1535,6 +1535,75 @@ class moodle_page {
                     }
                 break;
 
+                // RL EDIT
+                case 'userset':
+                    if (!file_exists($CFG->dirroot . '/elis/program/lib/setup.php')) {
+                        continue;
+                    }
+                    require_once($CFG->dirroot . '/elis/program/lib/setup.php');
+                    require_once elispm::lib('data/userset.class.php');
+
+                    $dbman = $DB->get_manager();
+                    if (!$dbman->table_exists(new xmldb_table('crlm_user'))) {
+                        continue;
+                    }
+
+                    //get userid
+                    $userid = pm_get_crlmuserid($USER->id);
+                    if (empty($userid)) {
+                        continue;
+                    }
+
+                    //get all assigned clusters
+                    $select = 'SELECT DISTINCT clst.id ';
+                    $tables = "FROM {".clusterassignment::TABLE."} uclst ";
+                    $join   = "JOIN {".userset::TABLE."} clst
+                               ON uclst.clusterid = clst.id ";
+                    $where  = "WHERE uclst.userid = :userid";
+                    $params = array('userid'=> $userid);
+
+                    $sql = $select . $tables . $join . $where;
+
+                    $highest_priority_theme = null;
+                    $highest_priority = 0;
+
+                    if (($usercluster_records = $DB->get_recordset_sql($sql, $params)) && $usercluster_records->valid()) {
+                        //retrieve the cluster context level
+                        if (defined('CONTEXT_ELIS_USERSET')) {
+                            // Get list of valid themes
+                            $themelist = get_list_of_themes();
+                            foreach($usercluster_records as $usercluster_record) {
+                                $context_instance = context_elis_userset::instance($usercluster_record->id);
+
+                                //get the userset object
+                                $userset = new userset($usercluster_record->id);
+                                //use field data magic to get their values
+                                // ELIS-3189
+                                if (!isset($userset->field__elis_userset_theme) ||
+                                    !isset($userset->field__elis_userset_themepriority)) {
+                                    continue;
+                                }
+                                $userset_theme = $userset->field__elis_userset_theme;
+                                $userset_themepriority = (int)$userset->field__elis_userset_themepriority;
+
+                                if (!empty($userset_theme) && isset($themelist[$userset_theme]) && $userset_themepriority !== null) {
+                                    //update chosen theme as appropriate
+                                    if ($userset_themepriority > $highest_priority || empty($highest_priority_theme)) {
+                                        $highest_priority_theme = $userset_theme;
+                                        $highest_priority = $userset_themepriority;
+                                    }
+                                }
+                            }
+                        }
+                    }
+
+                    if (!empty($highest_priority_theme)) {
+                        $theme = $highest_priority_theme;
+                        return $theme;
+                    }
+                    break;
+                // End: RL EDIT
+
                 case 'site':
                     if ($mnetpeertheme) {
                         return $mnetpeertheme;
